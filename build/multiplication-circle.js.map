{"version":3,"sources":["webpack:///build/multiplication-circle.js","webpack:///webpack/bootstrap 0e46f99572c7db8f2b99","webpack:///./~/d3/d3.js","webpack:///./js/dispatcher.js","webpack:///./js/main.js","webpack:///./js/utils/gradToCoords.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","length","mid","right","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","value","enumerable","d3_Map","this","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","i","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","toLowerCase","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","duration","ease","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined","updateGraduationNumber","dispatcher","graduationChange","updateCurrentFactor","factorChange","draw","gradToCoords","numberGraduations","graduations","coords","coords2","factor","circles","class","canvasContainer","getElementById","WIDTH","offsetWidth","HEIGHT","height","nbGraduations","newFactor","getAngleFor","graduation","console","currentAngle"],"mappings":"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","file":"build/multiplication-circle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(3);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.6\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.slice(0, i);\n\t        name = name.slice(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues[i] = keyValue;\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = nodes;\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged && d3.event.target === target);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === target);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    format = format.toLowerCase();\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t        if (x1 != null) {\n\t          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, active;\n\t      if ((lock = this[ns]) && (active = lock[lock.active])) {\n\t        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          var active = lock[lock.active];\n\t          if (active) {\n\t            --lock.count;\n\t            delete lock[lock.active];\n\t            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t          }\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, node.__data__, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, node.__data__, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          ease = transition.ease;\n\t          duration = transition.duration;\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return 1;\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, node.__data__, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node[ns];\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n\t  this.d3 = d3;\n\t}();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar d3 = __webpack_require__(1);\n\t\n\tvar dispatcher = d3.dispatch('graduationChange', 'factorChange');\n\t\n\tfunction updateGraduationNumber() {\n\t    d3.select('#graduation_input').attr('value', this.value);\n\t    d3.select('#graduation_numbers_input').attr('value', +this.value);\n\t    dispatcher.graduationChange(+this.value);\n\t}\n\t\n\td3.select('#graduation_input').on('input', updateGraduationNumber);\n\td3.select('#graduation_numbers_input').on('change', updateGraduationNumber);\n\t\n\tfunction updateCurrentFactor() {\n\t    d3.select('#current_factor_input').attr('value', this.value);\n\t    d3.select('#current_factor').attr('value', +this.value);\n\t    dispatcher.factorChange(+this.value);\n\t}\n\t\n\td3.select('#current_factor').on('input', updateCurrentFactor);\n\td3.select('#current_factor_input').on('change', updateCurrentFactor);\n\t\n\tmodule.exports = dispatcher;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar d3 = __webpack_require__(1);\n\tvar dispatcher = __webpack_require__(2);\n\t\n\t(function () {\n\t    'use strict';\n\t\n\t    var canvasContainer = document.getElementById('canvas-container');\n\t    var WIDTH = canvasContainer.offsetWidth > 600 ? 600 : canvasContainer.offsetWidth;\n\t    var HEIGHT = WIDTH;\n\t\n\t    var svg = d3.select('#circle').attr({ width: WIDTH, height: HEIGHT });\n\t\n\t    var center = { x: WIDTH / 2, y: HEIGHT / 2 };\n\t    var radius = WIDTH * 0.95 / 2; // do not take full width to prevent from cropped circle\n\t\n\t    var circle = svg.append('circle').attr({\n\t        'cx': center.x,\n\t        'cy': center.y,\n\t        'r': radius\n\t    });\n\t\n\t    var factor = 2,\n\t        numberGraduations = 100;\n\t    function draw() {\n\t        var gradToCoords = __webpack_require__(4)(center, radius, numberGraduations);\n\t\n\t        var graduations = d3.range(0, numberGraduations).map(function (g) {\n\t            var coords = gradToCoords(g);\n\t            var coords2 = gradToCoords(g * factor);\n\t\n\t            return {\n\t                x: coords.x,\n\t                y: coords.y,\n\t                x2: coords2.x,\n\t                y2: coords2.y\n\t            };\n\t        });\n\t\n\t        var segments = svg.selectAll('line').data(graduations);\n\t        segments.enter().append(\"line\").attr({\n\t            'x1': function x1(g) {\n\t                return g.x;\n\t            },\n\t            'y1': function y1(g) {\n\t                return g.y;\n\t            },\n\t            'x2': function x2(g) {\n\t                return g.x2;\n\t            },\n\t            'y2': function y2(g) {\n\t                return g.y2;\n\t            }\n\t        });\n\t\n\t        segments.transition().duration(500).attr({\n\t            'x1': function x1(g) {\n\t                return g.x;\n\t            },\n\t            'y1': function y1(g) {\n\t                return g.y;\n\t            },\n\t            'x2': function x2(g) {\n\t                return g.x2;\n\t            },\n\t            'y2': function y2(g) {\n\t                return g.y2;\n\t            }\n\t        });\n\t\n\t        segments.exit().remove();\n\t\n\t        var circles = svg.selectAll('.graduation').data(graduations);\n\t        circles.enter().append('circle').attr({\n\t            'class': 'graduation',\n\t            r: 3,\n\t            cx: function cx(d) {\n\t                return d.x;\n\t            },\n\t            cy: function cy(d) {\n\t                return d.y;\n\t            }\n\t        });\n\t\n\t        circles.transition().duration(500).attr({\n\t            cx: function cx(g) {\n\t                return g.x;\n\t            },\n\t            cy: function cy(g) {\n\t                return g.y;\n\t            }\n\t        });\n\t\n\t        circles.exit().remove();\n\t    }\n\t\n\t    draw();\n\t    dispatcher.on('graduationChange', function (nbGraduations) {\n\t        numberGraduations = nbGraduations;\n\t        draw();\n\t    });\n\t\n\t    dispatcher.on('factorChange', function (newFactor) {\n\t        factor = newFactor;\n\t        draw();\n\t    });\n\t})();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (center, radius, numberGraduations) {\n\t    function getAngleFor(graduation) {\n\t        console.log(2 * Math.PI / numberGraduations);\n\t        return 2 * Math.PI / numberGraduations * graduation;\n\t    }\n\t\n\t    return function gradToCoords(graduation) {\n\t        var currentAngle = getAngleFor(graduation);\n\t\n\t        return {\n\t            x: Math.round((center.x + Math.cos(currentAngle) * radius) * 100) / 100,\n\t            y: Math.round((center.y + Math.sin(currentAngle) * radius) * 100) / 100\n\t        };\n\t    };\n\t};\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** build/multiplication-circle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0e46f99572c7db8f2b99\n **/","!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 1\n ** module chunks = 0\n **/","var d3 = require('d3');\n\nvar dispatcher = d3.dispatch('graduationChange', 'factorChange');\n\nfunction updateGraduationNumber() {\n    d3.select('#graduation_input').attr('value', this.value);\n    d3.select('#graduation_numbers_input').attr('value', +this.value)\n    dispatcher.graduationChange(+this.value);\n}\n\nd3.select('#graduation_input').on('input', updateGraduationNumber);\nd3.select('#graduation_numbers_input').on('change', updateGraduationNumber);\n\nfunction updateCurrentFactor() {\n    d3.select('#current_factor_input').attr('value', this.value);\n    d3.select('#current_factor').attr('value', +this.value)\n    dispatcher.factorChange(+this.value);\n}\n\nd3.select('#current_factor').on('input', updateCurrentFactor);\nd3.select('#current_factor_input').on('change', updateCurrentFactor);\n\n\nmodule.exports = dispatcher;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/dispatcher.js\n **/","var d3 = require('d3');\nvar dispatcher = require('./dispatcher');\n\n(function() {\n    'use strict';\n\n    var canvasContainer = document.getElementById('canvas-container');\n    var WIDTH = canvasContainer.offsetWidth > 600 ? 600 : canvasContainer.offsetWidth;\n    var HEIGHT = WIDTH;\n\n    var svg = d3.select('#circle').attr({ width: WIDTH, height: HEIGHT });\n\n    var center = { x: WIDTH / 2, y: HEIGHT / 2 };\n    var radius = (WIDTH * 0.95) / 2; // do not take full width to prevent from cropped circle\n\n    var circle = svg.append('circle')\n        .attr({\n            'cx': center.x,\n            'cy': center.y,\n            'r': radius\n        });\n\n    var factor = 2, numberGraduations = 100;\n    function draw() {\n        var gradToCoords = require('./utils/gradToCoords')(center, radius, numberGraduations);\n\n        var graduations = d3.range(0, numberGraduations).map(g => {\n            var coords = gradToCoords(g);\n            var coords2 = gradToCoords(g * factor);\n\n            return {\n                x: coords.x,\n                y: coords.y,\n                x2: coords2.x,\n                y2: coords2.y\n            };\n        });\n\n        var segments = svg.selectAll('line').data(graduations);\n        segments.enter()\n            .append(\"line\")\n                .attr({\n                    'x1': g => g.x,\n                    'y1': g => g.y,\n                    'x2': g => g.x2,\n                    'y2': g => g.y2\n                });\n\n        segments.transition()\n            .duration(500)\n            .attr({\n                'x1': g => g.x,\n                'y1': g => g.y,\n                'x2': g => g.x2,\n                'y2': g => g.y2\n            });\n\n        segments.exit().remove();\n\n        var circles = svg.selectAll('.graduation').data(graduations);\n        circles.enter()\n            .append('circle')\n                .attr({\n                    'class': 'graduation',\n                    r: 3,\n                    cx: d => d.x,\n                    cy: d => d.y\n                });\n\n        circles\n            .transition()\n            .duration(500)\n                .attr({\n                    cx: g => g.x,\n                    cy: g => g.y,\n                });\n\n        circles.exit().remove();\n    }\n\n    draw();\n    dispatcher.on('graduationChange', function(nbGraduations) {\n        numberGraduations = nbGraduations;\n        draw();\n    });\n\n    dispatcher.on('factorChange', function(newFactor) {\n        factor = newFactor;\n        draw();\n    });\n})();\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/main.js\n **/","module.exports = function(center, radius, numberGraduations) {\n    function getAngleFor(graduation) {\n        console.log(2 * Math.PI / numberGraduations);\n        return 2 * Math.PI / numberGraduations * graduation;\n    }\n\n    return function gradToCoords(graduation) {\n        var currentAngle = getAngleFor(graduation);\n\n        return {\n            x: Math.round((center.x + Math.cos(currentAngle) * radius) * 100) / 100,\n            y: Math.round((center.y + Math.sin(currentAngle) * radius) * 100) / 100\n        };\n    };\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/utils/gradToCoords.js\n **/"],"sourceRoot":""}